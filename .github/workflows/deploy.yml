name: Deploy VoyageIA to Vercel

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run linting
        run: npm run lint || echo "No lint script found"
        
      - name: Run tests
        run: npm test || echo "No test script found"
        
      - name: Build application
        run: npm run build || echo "No build script found"
        
  deploy-preview:
    name: Deploy Preview
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Install Vercel CLI
        run: npm install --global vercel@canary
        
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
        
      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
        
      - name: Deploy Project Artifacts to Vercel (Preview)
        id: deploy-preview
        run: |
          echo "PREVIEW_URL=$(vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }})" >> $GITHUB_OUTPUT
          
      - name: Comment Preview URL
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## \ud83d\ude80 Preview D\u00e9ploiement\n\n\u2728 Votre preview VoyageIA est pr\u00eat !\n\n\ud83d\udd17 **Preview URL:** ${{ steps.deploy-preview.outputs.PREVIEW_URL }}\n\n---\n\n\ud83d\ude91 D\u00e9ploy\u00e9 avec GitHub Actions + Vercel`
            })
            
  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Install Vercel CLI
        run: npm install --global vercel@canary
        
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
        
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
        
      - name: Deploy Project Artifacts to Vercel (Production)
        id: deploy-production
        run: |
          echo "PRODUCTION_URL=$(vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }})" >> $GITHUB_OUTPUT
          
      - name: Create GitHub Deployment
        uses: actions/github-script@v7
        with:
          script: |
            const deployment = await github.rest.repos.createDeployment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.sha,
              environment: 'production',
              description: 'VoyageIA Production Deployment',
              auto_merge: false,
              required_contexts: []
            });
            
            await github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: deployment.data.id,
              state: 'success',
              environment_url: '${{ steps.deploy-production.outputs.PRODUCTION_URL }}',
              description: 'D\u00e9ploiement VoyageIA r\u00e9ussi !'
            });
            
      - name: Notify Success
        run: |
          echo "\ud83c\udf89 D\u00e9ploiement VoyageIA r\u00e9ussi !"
          echo "\ud83d\udd17 Production URL: ${{ steps.deploy-production.outputs.PRODUCTION_URL }}"
          echo "\u2728 Votre application de voyage IA est maintenant en ligne !"
          
  health-check:
    name: Health Check
    runs-on: ubuntu-latest
    needs: deploy-production
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Wait for deployment
        run: sleep 30
        
      - name: Health Check
        run: |
          curl -f ${{ needs.deploy-production.outputs.PRODUCTION_URL }}/api/health || exit 1
          echo "\u2713 L'API VoyageIA fonctionne correctement !"
          
      - name: Notify Health Check Success
        run: |
          echo "\ud83c\udf86 VoyageIA est op\u00e9rationnel !"
          echo "\ud83d\ude80 L'application voyage IA est pr\u00eate \u00e0 planifier des voyages !"
